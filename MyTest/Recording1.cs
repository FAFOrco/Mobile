///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Recording1 recording.
    /// </summary>
    [TestModule("04979650-1a3d-4757-8042-4269cdbfc4a4", ModuleType.Recording, 1)]
    public partial class Recording1 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyTestRepository repository.
        /// </summary>
        public static MyTestRepository repo = MyTestRepository.Instance;

        static Recording1 instance = new Recording1();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Recording1()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Recording1 Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Website", "Opening web site 'http://www.somositr.com' with browser 'Chrome' in normal mode.", new RecordItemIndex(0));
            Host.Current.OpenBrowser("http://www.somositr.com", "Chrome", "", false, false, false, false, false, true);
            Delay.Milliseconds(0);
            
            SetMobileView();
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{F12}'.", new RecordItemIndex(2));
            //Keyboard.Press("{F12}");
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'ITResourcesCreamosExperienciasMas.HttpSomositrComImgItrLogoSvg'", repo.ITResourcesCreamosExperienciasMas.HttpSomositrComImgItrLogoSvgInfo, new ActionTimeout(30000), new RecordItemIndex(3));
            repo.ITResourcesCreamosExperienciasMas.HttpSomositrComImgItrLogoSvgInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ITResourcesCreamosExperienciasMas.HttpSomositrComImgItrLogoSvg'.", repo.ITResourcesCreamosExperienciasMas.HttpSomositrComImgItrLogoSvgInfo, new RecordItemIndex(4));
            Validate.Exists(repo.ITResourcesCreamosExperienciasMas.HttpSomositrComImgItrLogoSvgInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ITResourcesCreamosExperienciasMas.BurgerNavbarBurger' at Center.", repo.ITResourcesCreamosExperienciasMas.BurgerNavbarBurgerInfo, new RecordItemIndex(5));
            repo.ITResourcesCreamosExperienciasMas.BurgerNavbarBurger.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ITResourcesCreamosExperienciasMas.ServiciosDeITR' at CenterLeft.", repo.ITResourcesCreamosExperienciasMas.ServiciosDeITRInfo, new RecordItemIndex(6));
            repo.ITResourcesCreamosExperienciasMas.ServiciosDeITR.Click(Location.CenterLeft);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'ITResourcesCreamosExperienciasMas.Servicios'", repo.ITResourcesCreamosExperienciasMas.ServiciosInfo, new ActionTimeout(30000), new RecordItemIndex(7));
            repo.ITResourcesCreamosExperienciasMas.ServiciosInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'ITResourcesCreamosExperienciasMas.DesignThinking'", repo.ITResourcesCreamosExperienciasMas.DesignThinkingInfo, new ActionTimeout(30000), new RecordItemIndex(8));
            repo.ITResourcesCreamosExperienciasMas.DesignThinkingInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Src='http://www.somositr.com/img/icon_testing.svg') on item 'ITResourcesCreamosExperienciasMas.DesignThinking'.", repo.ITResourcesCreamosExperienciasMas.DesignThinkingInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.ITResourcesCreamosExperienciasMas.DesignThinkingInfo, "Src", "http://www.somositr.com/img/icon_testing.svg");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ITResourcesCreamosExperienciasMas.QAQC' at Center.", repo.ITResourcesCreamosExperienciasMas.QAQCInfo, new RecordItemIndex(10));
            repo.ITResourcesCreamosExperienciasMas.QAQC.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'ITResourcesCreamosExperienciasMas.Testing'", repo.ITResourcesCreamosExperienciasMas.TestingInfo, new ActionTimeout(30000), new RecordItemIndex(11));
            repo.ITResourcesCreamosExperienciasMas.TestingInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ITResourcesCreamosExperienciasMas.Testing'.", repo.ITResourcesCreamosExperienciasMas.TestingInfo, new RecordItemIndex(12));
            Validate.Exists(repo.ITResourcesCreamosExperienciasMas.TestingInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ITResourcesCreamosExperienciasMas.TestingAutomatizado'.", repo.ITResourcesCreamosExperienciasMas.TestingAutomatizadoInfo, new RecordItemIndex(13));
            Validate.Exists(repo.ITResourcesCreamosExperienciasMas.TestingAutomatizadoInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ITResourcesCreamosExperienciasMas.TestingAutomatizado' at Center.", repo.ITResourcesCreamosExperienciasMas.TestingAutomatizadoInfo, new RecordItemIndex(14));
            repo.ITResourcesCreamosExperienciasMas.TestingAutomatizado.Click();
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.ITResourcesCreamosExperienciasMas.Self, false, new RecordItemIndex(15));
            
            Report.Screenshot(ReportLevel.Info, "User", "", null, false, new RecordItemIndex(16));
            
            Report.Log(ReportLevel.Info, "Application", "Closing application containing item 'ITResourcesCreamosExperienciasMas'.", repo.ITResourcesCreamosExperienciasMas.SelfInfo, new RecordItemIndex(17));
            Host.Current.CloseApplication(repo.ITResourcesCreamosExperienciasMas.Self, 2000);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
